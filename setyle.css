@import url("https://fonts.googleapis.com/css?family=Montserrat:100");
html, body, h1 {
  padding: 0;
  margin: 0;
  font-family: "Montserrat", sans-serif;
}

#app {
  background: #0a0a0a;
  height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(rgba(10, 10, 10, 0.6), rgba(0, 0, 0, 0.9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url("https://images.pexels.com/photos/5380649/pexels-photo-5380649.jpeg?auto=compress&cs=tinysrgb&w=1600");
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc;
  letter-spacing: 1em;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}
/*responsi mobil
/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(14px, 9999px, 37px, 0);
    transform: skew(0.35deg);
  }
  5% {
    clip: rect(87px, 9999px, 31px, 0);
    transform: skew(0.15deg);
  }
  10% {
    clip: rect(95px, 9999px, 24px, 0);
    transform: skew(0.12deg);
  }
  15% {
    clip: rect(23px, 9999px, 88px, 0);
    transform: skew(0.17deg);
  }
  20% {
    clip: rect(11px, 9999px, 74px, 0);
    transform: skew(0.1deg);
  }
  25% {
    clip: rect(60px, 9999px, 28px, 0);
    transform: skew(0.39deg);
  }
  30% {
    clip: rect(82px, 9999px, 35px, 0);
    transform: skew(0.85deg);
  }
  35% {
    clip: rect(68px, 9999px, 41px, 0);
    transform: skew(0.42deg);
  }
  40% {
    clip: rect(75px, 9999px, 16px, 0);
    transform: skew(0.95deg);
  }
  45% {
    clip: rect(29px, 9999px, 52px, 0);
    transform: skew(0.1deg);
  }
  50% {
    clip: rect(67px, 9999px, 6px, 0);
    transform: skew(0.12deg);
  }
  55% {
    clip: rect(36px, 9999px, 83px, 0);
    transform: skew(0.93deg);
  }
  60% {
    clip: rect(38px, 9999px, 99px, 0);
    transform: skew(0.87deg);
  }
  65% {
    clip: rect(40px, 9999px, 40px, 0);
    transform: skew(0.98deg);
  }
  70% {
    clip: rect(51px, 9999px, 22px, 0);
    transform: skew(0.72deg);
  }
  75% {
    clip: rect(73px, 9999px, 83px, 0);
    transform: skew(0.78deg);
  }
  80% {
    clip: rect(100px, 9999px, 62px, 0);
    transform: skew(0.69deg);
  }
  85% {
    clip: rect(59px, 9999px, 72px, 0);
    transform: skew(0.71deg);
  }
  90% {
    clip: rect(36px, 9999px, 41px, 0);
    transform: skew(0.61deg);
  }
  95% {
    clip: rect(100px, 9999px, 57px, 0);
    transform: skew(0.67deg);
  }
  100% {
    clip: rect(80px, 9999px, 84px, 0);
    transform: skew(0.8deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(70px, 9999px, 50px, 0);
    transform: skew(0.17deg);
  }
  5% {
    clip: rect(44px, 9999px, 36px, 0);
    transform: skew(0.93deg);
  }
  10% {
    clip: rect(92px, 9999px, 96px, 0);
    transform: skew(0.56deg);
  }
  15% {
    clip: rect(19px, 9999px, 14px, 0);
    transform: skew(0.85deg);
  }
  20% {
    clip: rect(18px, 9999px, 86px, 0);
    transform: skew(0.62deg);
  }
  25% {
    clip: rect(31px, 9999px, 25px, 0);
    transform: skew(0.46deg);
  }
  30% {
    clip: rect(74px, 9999px, 9px, 0);
    transform: skew(0.47deg);
  }
  35% {
    clip: rect(22px, 9999px, 43px, 0);
    transform: skew(0.25deg);
  }
  40% {
    clip: rect(2px, 9999px, 87px, 0);
    transform: skew(0.48deg);
  }
  45% {
    clip: rect(65px, 9999px, 20px, 0);
    transform: skew(0.62deg);
  }
  50% {
    clip: rect(33px, 9999px, 73px, 0);
    transform: skew(0.72deg);
  }
  55% {
    clip: rect(8px, 9999px, 16px, 0);
    transform: skew(0.52deg);
  }
  60% {
    clip: rect(13px, 9999px, 25px, 0);
    transform: skew(0.73deg);
  }
  65% {
    clip: rect(17px, 9999px, 74px, 0);
    transform: skew(0.23deg);
  }
  70% {
    clip: rect(7px, 9999px, 71px, 0);
    transform: skew(0.74deg);
  }
  75% {
    clip: rect(75px, 9999px, 23px, 0);
    transform: skew(0.06deg);
  }
  80% {
    clip: rect(84px, 9999px, 48px, 0);
    transform: skew(0.26deg);
  }
  85% {
    clip: rect(4px, 9999px, 49px, 0);
    transform: skew(0.1deg);
  }
  90% {
    clip: rect(63px, 9999px, 4px, 0);
    transform: skew(0.33deg);
  }
  95% {
    clip: rect(42px, 9999px, 3px, 0);
    transform: skew(0.29deg);
  }
  100% {
    clip: rect(88px, 9999px, 21px, 0);
    transform: skew(0.96deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(1deg);
  }
  10% {
    transform: skew(0deg);
  }
  20% {
    transform: skew(3deg);
  }
  30% {
    transform: skew(-2deg);
  }
  40% {
    transform: skew(4deg);
  }
  50% {
    transform: skew(3deg);
  }
  60% {
    transform: skew(-1deg);
  }
  70% {
    transform: skew(3deg);
  }
  80% {
    transform: skew(-2deg);
  }
  90% {
    transform: skew(2deg);
  }
  100% {
    transform: skew(-1deg);
  }
}
/*boton*/

  .l1{
    color: #ffffff;
  }
  button, button::after {
    width: 300px;
    height: 76px;
    font-size: 36px;
    font-family: 'Bebas Neue', cursive;
    background: linear-gradient(45deg, transparent 5%, #00000092 5%);
    border: 0;
    color: #fff;
    letter-spacing: 3px;
    line-height: 88px;
    box-shadow: 6px 0px 0px #00ff26;
    outline: transparent;
    position: relative;
  }
  
  button::after {
    --slice-0: inset(50% 50% 50% 50%);
    --slice-1: inset(80% -6px 0 0);
    --slice-2: inset(50% -6px 30% 0);
    --slice-3: inset(10% -6px 85% 0);
    --slice-4: inset(40% -6px 43% 0);
    --slice-5: inset(80% -6px 5% 0);
    
    content: 'AVAILABLE NOW';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 3%, #1df600 3%, #25f600 5%, #ffffff 5%);
    text-shadow: -3px -3px 0px #F8F005, 3px 3px 0px #00E6F6;
    clip-path: var(--slice-0);
  }
  
  button:hover::after {
    animation: 1s glitch;
    animation-timing-function: steps(2, end);
  }
  
  @keyframes glitch {
    0% {
      clip-path: var(--slice-1);
      transform: translate(-20px, -10px);
    }
    10% {
      clip-path: var(--slice-3);
      transform: translate(10px, 10px);
    }
    20% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 10px);
    }
    30% {
      clip-path: var(--slice-3);
      transform: translate(0px, 5px);
    }
    40% {
      clip-path: var(--slice-2);
      transform: translate(-5px, 0px);
    }
    50% {
      clip-path: var(--slice-3);
      transform: translate(5px, 0px);
    }
    60% {
      clip-path: var(--slice-4);
      transform: translate(5px, 10px);
    }
    70% {
      clip-path: var(--slice-2);
      transform: translate(-10px, 10px);
    }
    80% {
      clip-path: var(--slice-5);
      transform: translate(20px, -10px);
    }
    90% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 0px);
    }
    100% {
      clip-path: var(--slice-1);
      transform: translate(0);
    }
  }
  @media(max-width: 540px) {
    
  #app {
  background: #0a0a0a;
  height: 100vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: linear-gradient(rgba(10, 10, 10, 0.6), rgba(0, 0, 0, 0.9)), repeating-linear-gradient(0, transparent, transparent 2px, black 3px, black 3px), url("https://images.pexels.com/photos/5380649/pexels-photo-5380649.jpeg?auto=compress&cs=tinysrgb&w=1600");
  background-size: cover;
  background-position: center;
  z-index: 1;
}
.glitch {
  position: relative;
  color: white;
  font-size: 2em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
button, button::after {
  width: 150px;
  height: 76px;
  font-size: 18px;
  font-family: 'Bebas Neue', cursive;
  background: linear-gradient(45deg, transparent 5%, #00000092 5%);
  border: 0;
  color: #fff;
  letter-spacing: 3px;
  line-height: 88px;
  box-shadow: 6px 0px 0px #00ff26;
  outline: transparent;
  position: relative;
}
  }